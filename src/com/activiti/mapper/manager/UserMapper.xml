<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.activiti.mapper.manager.UserMapper" >
	<resultMap type="com.activiti.po.Role" id="roleRM">
		<result property="id" column="roleId" />
		<result property="name" column="roleName" />
	</resultMap>
	<resultMap type="com.activiti.po.User" id="userRM">
		<id property="id" column="id" />
		<result property="userName" column="userName" />
		<result property="passWord" column="passWord" />
		<result property="email" column="email" />
		<result property="name" column="name" />
		<association property="role" javaType="com.activiti.po.Role" resultMap="roleRM"></association>
	</resultMap>

	<select id="find" parameterType="map" resultMap="userRM">
		SELECT a.id,a.userName,a.passWord,a.name,r.id AS roleId,r.name AS roleName
		FROM s_user a 
		INNER JOIN s_role r ON a.roleId=r.id 
		where 1=1 
		order by a.id desc
	</select>
	
	<select id="get"  parameterType="int"  resultMap="userRM">
		SELECT a.id, a.userName, a.passWord,a.name, r.id AS roleId,r.name AS roleName
		FROM s_user  a
		INNER JOIN s_role r ON a.roleId=r.id 
		where a.id = #{id}
	</select>
	
	<select id="login" parameterType="map" resultMap="userRM">
		SELECT a.id,a.userName,a.passWord,a.name,r.id AS roleId,r.name AS roleName
		FROM s_user a 
		INNER JOIN s_role r ON a.roleId=r.id 
		where a.userName=#{userName} and a.passWord=#{passWord}
	</select>
	
	<insert id="insert" parameterType="com.activiti.po.User" >
		insert into s_user
			( userName,passWord,name,roleId )
		values
			( #{userName}, #{passWord}, #{name}, #{roleId} )
	</insert>
	
	<update id="update" parameterType="com.activiti.po.User" >
		update s_user
		<set>
			<if test="userName != null">
				userName = #{userName},
			</if>
			<if test="passWord != null">
				passWord = #{passWord},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="roleId != null">
				roleId = #{roleId}
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="int">
		delete from s_user
		where id = #{id}
	</delete>
    
	<delete id="delete" parameterType="int">
		delete from s_user
		where id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
</mapper>
